"use strict";
/** THIS FILE IS MANUALLY MAINAINED: see .fernignore */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HumeClient = void 0;
const core = __importStar(require("./core"));
const Client_1 = require("./api/resources/tts/client/Client");
const Client_2 = require("./api/resources/empathicVoice/client/Client");
const Client_3 = require("./api/resources/expressionMeasurement/client/Client");
const version_1 = require("./version");
const fetcherThatAddsHeaders = (fetcherToWrap) => {
    return (args) => {
        var _a;
        const newArgs = Object.assign({}, args);
        newArgs.headers = (_a = newArgs.headers) !== null && _a !== void 0 ? _a : {};
        ((newArgs.headers["X-Hume-Client-Name"] = "typescript_sdk"),
            (newArgs.headers["X-Hume-Client-Version"] = version_1.SDK_VERSION));
        return fetcherToWrap(args);
    };
};
class HumeClient {
    constructor(_options = {}) {
        var _a;
        this._options = _options;
        const defaultFetcher = (_a = _options.fetcher) !== null && _a !== void 0 ? _a : core.fetcher;
        this._options.fetcher = fetcherThatAddsHeaders(defaultFetcher);
    }
    get tts() {
        var _a;
        return ((_a = this._tts) !== null && _a !== void 0 ? _a : (this._tts = new Client_1.Tts(this._options)));
    }
    get empathicVoice() {
        var _a;
        return ((_a = this._empathicVoice) !== null && _a !== void 0 ? _a : (this._empathicVoice = new Client_2.EmpathicVoice(this._options)));
    }
    get expressionMeasurement() {
        var _a;
        return ((_a = this._expressionMeasurement) !== null && _a !== void 0 ? _a : (this._expressionMeasurement = new Client_3.ExpressionMeasurement(this._options)));
    }
}
exports.HumeClient = HumeClient;
